'use strict';

const fs = require('fs');

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', inputStdin => {
    inputString += inputStdin;
});

process.stdin.on('end', _ => {
    inputString = inputString.replace(/\s*$/, '')
        .split('\n')
        .map(str => str.replace(/\s*$/, ''));

    main();
});

function readLine() {
    return inputString[currentLine++];
}

const insetSortedRemove = (arr, add, remove) => {    
    let removed = false;
    let added = false;

    for(let i = 0; arr.length > i; i++ ) {
        if(arr[i] === remove && !removed) {
            removed = true;
            arr.splice(i,1)
        }
        if(arr[i] >= add  && !added) {
            added = true;
            arr.splice(i,0, add)
        }
    }
    
    if(!added) arr.push(add)

    // console.log(arr)
    
    return arr; 
} 

// Complete the activityNotifications function below.
function activityNotifications(expenditure, d) {
    let result = 0;
    let median = 0;
    let expenditureSliceSort = expenditure.slice(0, d).sort(((a,b) => a-b));

    for(let i = 0; expenditure.length - d - 1 > i; i++ ) {
        
        if(d % 2) {
            median = expenditureSliceSort[Math.floor(d/2)]
        } else {
            median = (expenditureSliceSort[d/2] + expenditureSliceSort[d/2+1])/2
        }
        
        if(expenditure[d+i] >= median*2) result++;
        // console.log({1: expenditureSliceSort, remove: expenditure[i], add: expenditure[d+i+1]})
        insetSortedRemove(expenditureSliceSort, expenditure[d+i+1], expenditure[i]);
        // console.log({expenditureSliceSort})
    }
    
    return result;

}

function main() {
    const ws = fs.createWriteStream(process.env.OUTPUT_PATH);

    const nd = readLine().split(' ');

    const n = parseInt(nd[0], 10);

    const d = parseInt(nd[1], 10);

    const expenditure = readLine().split(' ').map(expenditureTemp => parseInt(expenditureTemp, 10));

    let result = activityNotifications(expenditure, d);

    ws.write(result + "\n");

    ws.end();
}
